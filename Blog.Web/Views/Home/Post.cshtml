@using Markdig
@using Blog.Web.Areas.Admin.Auth
@model PostModel
@inject MarkdownPipeline markdownPipeline
@{
    ViewData["Title"] = @Model!.Title;

    string contentHtml = Markdown.ToHtml(Model.Content, markdownPipeline);
}

@inject SessionService sessionService;

@section styles {
    <link href="~/sass_compiled/post.css" rel="stylesheet" />
    <link rel="stylesheet" href="/highlight/styles/github.min.css">
}

@section scripts {
    <script src="/highlight/highlight.min.js"></script>
    <script>hljs.highlightAll();</script>
    <script>
        const content = document.querySelector('.content');
        const headings = content.querySelectorAll('h1,h2,h3,h4,h5,h6');

        const addAnchor = (el) => {
            const anchor = document.createElement('a');
            anchor.href = `#${el.id}`;
            anchor.innerHTML = '<i class="fa-solid fa-link"></i>';
            anchor.className = 'heading-anchor';
            el.insertBefore(anchor, el.firstChild);
        }

        headings.forEach(addAnchor);
    </script>
}

<main>
    <article>
        <header>
            <h1>@Model!.Title</h1>
            <div class="tags">
                @foreach (var tag in Model.Tags)
                {
                    <a asp-area="" asp-controller="Home" asp-action="Index" asp-route-search="@tag.Name"
                        class="tag">@tag.Name</a>
                }
            </div>
            <div class="post-info">
                @if (Model.UpdatedOn.HasValue)
                {
                    <div>
                        <i class="far fa-clock"></i>
                        @(Model.UpdatedOn.Value.ToString("D"))
                    </div>
                }
            </div>
            @if (sessionService.Session.IsLoggedIn)
            {
                <div class="quick-access">
                    <a asp-area="Admin" asp-controller="Post" asp-action="Create">Create</a>
                    <a asp-area="Admin" asp-controller="Post" asp-action="Edit" asp-route-id="@Model.Id">Edit</a>
                </div>
            }
        </header>
        <div class="content">
            @Html.Raw(contentHtml)
        </div>
    </article>
</main>


