@using Markdig
@using Blog.Web.Areas.Admin.Auth
@using Blog.Web.Areas.Admin.Posts
@using Blog.Web.Infrastructure
@using Newtonsoft.Json
@model PostModel
@inject MarkdownPipeline markdownPipeline
@{
    ViewData["Title"] = @Model!.Title;

    string contentHtml = Markdown.ToHtml(Model.Content, markdownPipeline);
}

@inject SessionService sessionService;

@section styles {
    <link href="~/sass_compiled/post.css" rel="stylesheet" />
    <link rel="stylesheet" href="/highlight/styles/github.min.css">
}

@section scripts {
    <script src="/highlight/highlight.min.js"></script>
    <script>hljs.highlightAll();</script>
    <script src="/js/markdown-addon.js"></script>
    <script src="/js/comment.js"></script>
}

@{
    var postJson = new PostJson
    {
        PostId = Model!.Id
    };

    var userJson = new UserJson
    {
        Avatar = sessionService.Session.UserAccount?.Avatar,
        Username = sessionService.Session.UserAccount?.Username
    };
}

<main data-post-json="@(JsonConvert.SerializeObject(postJson))" data-user-json="@(JsonConvert.SerializeObject(userJson))">
    <article>
        <header>
            <h1>@Model!.Title</h1>
            <div class="tags">
                @foreach (var tag in Model.Tags)
                {
                    <a asp-area="" asp-controller="Home" asp-action="Index" asp-route-tagId="@tag.TagId"
                       class="tag">@tag.Name</a>
                }
            </div>
            <div class="post-info">
                @if (Model.UpdatedOn.HasValue)
                {
                    <div>
                        <i class="far fa-clock"></i>
                        @(Model.UpdatedOn.Value.ToString("D"))
                    </div>
                }
            </div>
            @if (sessionService.Session.IsLoggedIn)
            {
                <div class="quick-access">
                    <a asp-area="Admin" asp-controller="Post" asp-action="Create">Create</a>
                    <a asp-area="Admin" asp-controller="Post" asp-action="Edit" asp-route-id="@Model.Id">Edit</a>
                </div>
            }
        </header>
        <div class="content">
            @Html.Raw(contentHtml)
        </div>
        <div class="comment-wrapper">
            <div class="create-comment-wrapper">
                @{
                    var currentUser = sessionService?.Session?.UserAccount;
                }

                @if (sessionService.Session.IsLoggedIn)
                {
                    <div class="avatar">
                        <img src="@currentUser?.Avatar" alt="@currentUser?.Username"/>
                    </div>
                    <div class="create-comment">
                        <textarea rows="4" placeholder="Add a comment..."></textarea>
                        <div class="actions">
                            <a href="#" class="cancel">Cancel</a>
                            <a href="#" class="comment">Comment</a>
                        </div>
                    </div>
                }
                else
                {
                    <div class="login-required">You need to <a asp-area="Admin" asp-controller="Auth" asp-action="LoginPage">Log In</a> to comment.</div>
                }
            </div>
            <div class="comments">
                @foreach (var comment in Model.Comments)
                {
                    var commentUser = comment.User;

                    <div class="comment">
                        <div class="avatar">
                            <img src="@commentUser.AvatarUrl" alt="@commentUser.Name"/></div>
                        <div class="comment-body">
                            <div class="user">
                                <span>@commentUser.Name</span>
                                <span class="created">@DateUtils.DateTimeToLongAgo(comment.CreatedOn)</span>
                                @if (comment.Edited)
                                {
                                    <span class="edited">(edited)</span>
                                }
                            </div>
                            <p>@comment.Content</p>
                            <div class="actions">
                                @if (sessionService.Session.IsLoggedIn)
                                {
                                    <a class="reply" href="#" data-comment-id="@comment.CommentId" onclick="replyToComment(event);">Reply</a>
                                    @if (commentUser.UserId == sessionService.Session.UserAccount?.UserId)
                                    {
                                        <a class="edit" href="#">Edit</a>
                                    }
                                }
                            </div>
                        </div>
                        <div class="children comments">
                            @foreach (var childComment in comment.Children)
                            {
                                var childCommentUser = childComment.User;

                                <div class="comment">
                                    <div class="avatar">
                                        <img src="@childCommentUser.AvatarUrl" alt="@childCommentUser.Name"/></div>
                                    <div class="comment-body">
                                        <div class="user">
                                            <span>@childCommentUser.Name</span>
                                            <span class="created">@DateUtils.DateTimeToLongAgo(childComment.CreatedOn)</span>
                                            @if (childComment.Edited)
                                            {
                                                <span class="edited">(edited)</span>
                                            }
                                        </div>
                                        <p>@childComment.Content</p>
                                        <div class="actions">
                                            @if (sessionService.Session.IsLoggedIn)
                                            {
                                                <a class="reply" href="#" data-comment-id="@comment.CommentId" onclick="replyToComment(event);" data-is-child>Reply</a>
                                                @if (childCommentUser.UserId == sessionService.Session.UserAccount?.UserId)
                                                {
                                                    <a class="edit" href="#">Edit</a>
                                                }
                                            }
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                }
            </div>
            <div class="comment-loader hide">
                <i class="fa-solid fa-spinner"></i>
            </div>
        </div>
    </article>
</main>


