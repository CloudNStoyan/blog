@using Blog.Web.Areas.Admin.Posts
@model Blog.Web.Areas.Admin.Posts.FilteredPostsModel

@{
    ViewData["Title"] = "All Posts";
}

@section styles
{
    <link rel="stylesheet" href="~/admin/css/posts.css"/>
}

@section footer {
    <script src="/admin/js/posts.js"></script>
}

<div class="list-wrapper">
    <h1 class="text-center">All Posts</h1>
    <div class="actions">
        <div class="filter-group">
            <form asp-controller="Post" asp-action="All" method="get">
                <input type="hidden" asp-for="Filter.Offset" value="@Model?.Filter?.Offset"/>
                <input type="hidden" asp-for="Filter.Limit" value="@Model?.Filter?.Limit"/>
                <input type="hidden" asp-for="Filter.OrderBy" value="@Model?.Filter?.OrderBy"/>
                <input type="hidden" asp-for="Filter.Sort" value="@Model?.Filter?.Sort"/>
                <input type="text" class="form-control" placeholder="Search"
                       asp-for="Filter.Search" value="@Model?.Filter?.Search"/>
                <select id="OrderBy">
                    @{
                        var orderByValues = Enum.GetValues(typeof(PostFilterOrderBy));

                        foreach (var option in orderByValues)
                        {
                            if ((PostFilterOrderBy)option != Model?.Filter?.OrderBy)
                            {
                                <option value="@option">@option</option>
                            }
                            else
                            {
                                <option value="@option" selected>@option</option>
                            }
                        }
                    }
                </select>
                <select id="Sort">
                    @{
                        var sortValues = Enum.GetValues(typeof(PostFilterSort));

                        foreach (var option in sortValues)
                        {
                            if ((PostFilterSort)option != Model?.Filter?.Sort)
                            {
                                <option value="@option">@option</option>
                            }
                            else
                            {
                                <option value="@option" selected>@option</option>
                            }
                        }
                    }
                </select>
                <button class="btn btn-rounded btn-info" type="submit"><i class="fa fa-search "></i></button>
            </form>
        </div>
        <div class="create-post">
            <a class="btn btn-primary create-post-btn" asp-controller="Post" asp-action="Create">Create<i class="fa fa-plus"></i></a>
        </div>
    </div>
    <table class="table table-striped table-dark table-bordered my-table">
        <thead class="thead-dark">
        <tr>
            <th>#</th>
            <th>Title</th>
            <th>Updated On</th>
            <th>Created On</th>
            <th>Action</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var post in Model.Posts)
        {
            <tr>
                <th>@post.Id</th>
                <td>@post.Title</td>
                <td>@post.UpdatedOn</td>
                <td>@post.CreatedOn</td>
                <td class="action-wrapper">
                    <div>
                        <a class="btn btn-info" asp-area="" asp-controller="Home" asp-action="Post" asp-route-id="@post.Id">View</a>
                        <a class="btn btn-warning" asp-controller="Post" asp-action="Edit" asp-route-id="@post.Id">Edit</a>
                        <a class="btn btn-danger" asp-controller="Post" asp-action="Delete" asp-route-id="@post.Id">Delete</a>
                    </div>
                </td>
            </tr>
        }
        </tbody>
    </table>
    @if (Model.Posts.Length < 1)
    {
        <div>No post were found please try to use less words or more specific ones.</div>
    }
</div>
